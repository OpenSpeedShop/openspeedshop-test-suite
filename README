openspeedshop test utility:

to begin:
1)
create the environment file env.json with the command

./test-script.py --create-env

this will create a default environment file env.json populated with
some defaults. Edit these to appropriate values before continuing.

options are as follows:
bin_dir - directory to store compiled tests in
build_scripts_dir - directory containing the build scripts, this should probably not be changed
compilers - the list of compilers to compile with. adding a compilers will call an additional build script.
		e.g. 'compilers':['gnu','intel']    will set the active build scripts to run_build_gnu.sh and run_build_intel.sh
mpi_drivers - list of commands you us to run mpi applications, include argments
		e.g. 'mpi_drivers':['mpirun -np 2']

src_dir - directory containing the source for the tests
test_data_dir - directory to store the test data


2)
build the tests with the command

./test-script.py --build-tests

this will call the build scripts in build_scripts_dir specifed by the compilers option in the env file

3)
create baselines for the various tests

before doing this be sure to load the mpi and openss modules

./test-script.py --create-baseline

this can take some time, results will be in
test_data/baseline/$date by default

4)
create run data for the various tests

./test-script.py --run-tests

this can take some time, results will be in
test_data/results/$date by default

5)
compare the results to the baseline data

./test-script.py --compare-tests

this tools looks in the most recent results and baseline folders by default
soon to add specific folder specification.
by default the tool checks that all values are within 5% of each other.
this number will be an argument soon

see ./test-script.py --help for more options
















_______________________________________________

directory structure after building and running:

openspeedshop-test-suite
	CMakeLists.txt
	cmake
		...
	bin
		...
	build_scripts
		run_build*.sh
	env.json
	src
		...
	test-script.py
	test_data
		baseline
			oss_version
				date
					openss_dbs...
		results
			oss_version
				date
					openss_dbs...
